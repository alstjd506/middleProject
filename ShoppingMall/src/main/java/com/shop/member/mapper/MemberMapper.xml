<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shop.member.mapper.MemberMapper">

	<!-- 로그인 -->
	<select id="selectMember" resultType="member">
		select *
		from users
		where
		user_id = #{userId}
		and user_pw = #{userPw}
	</select>
	
	<!-- 아이디찾기 -->
	<select id="selectMember2" parameterType="member">
		select      user_Id
		from        users
		where
					user_Name = #{userName}
		and
					user_Phone = #{userPhone}
	</select>
	
	<!-- 비밀번호찾기 -->
	<select id="selectMember3" parameterType="member">
		select 		user_Pw
		from	    users
		where
					user_Id = #{userId}  
		and    
				    user_Name = #{userName}
		and
					user_Phone = #{userPhone}
	</select>
	
	<!-- 회원가입 -->
	<insert id="selectMember4" parameterType="com.shop.vo.MemberVO">
		insert into
		USERS(user_id, user_pw, user_name, user_phone, user_post, user_addr,
		user_detail_addr)
		values(#{userId},#{userPw},#{userName},#{userPhone},#{userPost},#{userAddr},#{userDetailAddr})
	</insert>
	
	<!-- 회원정보수정 -->
	<update id="selectMembermodify" parameterType="member">
	update 		users
	set			user_Id = #{userId},
      			user_Pw = #{userPw},
       			user_Name = #{userName},
       			user_Phone = #{userPhone},
       			user_Post = #{userPost},
       			user_Addr = #{userAddr},
      			user_Detail_Addr = #{userDetailAddr}
    where user_Id = #{userId}
	</update>

	<delete id="deleteMember" parameterType="String">
	delete from users
	where user_id = #{userId}
	</delete>


	<!-- -->
	<!-- <select id="selectUserCountById" parameterType="String" resultType="int"> -->
	<!-- SELECT COUNT(*) FROM USERS WHERE user_id = #{userId} -->
	<!-- </select> -->

	<!-- -->
	
	<select id="mypageCart" resultType="product" >
		select p.*
		from product p join cart c
              			on p.prod_no = c.prod_no
		where user_id = #{userId}
	</select>
	
	<select id="mypageReviewCnt" resultType="int">
		select count(*)
		from review
		where user_id = #{userId}
	</select>
	
	<select id="mypageRecentOrderList" resultType="map">
		select p.prod_name, p.prod_no, p.prod_price, o.*, o.order_date, o.order_status
		from order_detail od join orders o 
							 on o.order_no = od.order_no
    						 join product p 
    						 on p.prod_no = od.prod_no
    	<![CDATA[	
		where o.order_date >= SYSDATE - INTERVAL '3' DAY
		]]>
  		and user_id = #{userId}
	</select>
	
	<select id="mypagePastOrderList" resultType="map">
		select p.prod_name, p.prod_image, p.prod_price, p.prod_no, o.*, od.order_cnt
		from order_detail od join orders o 
							 on o.order_no = od.order_no
    						 join product p 
    						 on p.prod_no = od.prod_no
    	<![CDATA[				
		where o.order_date < SYSDATE - INTERVAL '3' DAY
		]]>
		and o.order_status = 4
  		and user_id = #{userId}
	</select>
	
	<select id="mypageOrderList"  resultType="map">
		select p.prod_name, p.prod_image, p.prod_price, p.prod_no, o.*, od.order_cnt
		from order_detail od join orders o
							 on o.order_no = od.order_no
							 join product p
							 on p.prod_no = od.prod_no
		where (o.order_status = 1 
		or o.order_status = 2 
		or o.order_status = 3)
		and user_id = #{userId}
	</select>
		
	<select id="mypageReturnList" resultType="map">
		select p.prod_name, p.prod_image, p.prod_price, p.prod_no, o.*, od.order_cnt 
		from order_detail od join orders o
							 on o.order_no = od.order_no
							 join product p
							 on p.prod_no = od.prod_no
		where (o.order_status = 5 
		or o.order_status = 6 
		or o.order_status = 7
		or o.order_status = 8)
		and user_id = #{userId}
	</select>
	
	<select id="mypageOrderDetail" resultType="map">
		select p.prod_name, p.prod_image, p.prod_no, p.prod_price, o.*, od.order_cnt
		from order_detail od join orders o
							 on o.order_no = od.order_no
							 join product p
							 on p.prod_no = od.prod_no
		where (o.order_status = 1 
		or o.order_status = 2 
		or o.order_status = 3)
		and o.user_id = #{userId}
		and o.order_no = #{orderNo}
	</select>
	
	<select id="mypageUserDetail" resultType="map">
		select u.*, o.*
		from users u join orders o 
					 on u.user_id = o.user_id
		where o.user_id = #{userId}
		and o.order_no = #{orderNo}
	</select>
	
	<select id="mypageBoardY" resultType="int">
		select count(*)
		from board
		where board_status = 'y'
		and user_id = #{userId}
	</select>
	<select id="mypageBoardN" resultType="int">
		select count(*)
		from board
		where board_status = 'n'
		and user_id = #{userId}
	</select>
	
	<select id="boardList" resultType="board">
		select *
		from board
		where user_id = #{userId}
	</select>
	
	<select id="boardInfo" resultType="board">
		select *
		from board
		where user_id = #{userId}
		and board_no = #{boardNo}
	</select>
	
	<update id="updateBoard" parameterType="Board">
    	update board
    	set boardTitle = #{boardTitle},
        	boardContent = #{boardContent}
    	where boardNo = #{boardNo}
	</update>
	
	<update id="cancleOrder" parameterType="int">
		update orders 
    	set order_status = 5
    	where order_no = #{orderNo}
	</update>
	<update id="confOrder" parameterType="int">
		update orders 
    	set order_status = 4
    	where order_no = #{orderNo}
	</update>
	<update id="returnOrder" parameterType="int">
		update orders 
    	set order_status = 7
    	where order_no = #{orderNo}
	</update>
	
</mapper>