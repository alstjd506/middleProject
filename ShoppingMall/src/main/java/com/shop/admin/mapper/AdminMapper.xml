<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shop.admin.mapper.AdminMapper">
	<select id="adminProductList" resultType="product">
		select
		p.prod_no,prod_name,prod_comment,prod_price,prod_sale,prod_date,category_name
		from product p join category c
		on p.category_code = c.category_code
		order by p.category_code
	</select>
	<select id="adminProductCnt" resultType="int">
		select count(prod_no)
		from product
	</select>
	<select id="adminMemberList" resultType="member">
		select *
		from users
		where user_resp not Like 'Admin'
	</select>
	<select id="adminBoardList" resultType="board">
		select *
		from board
		order
		by board_date desc
	</select>
	<select id="adminBoardInfo" resultType="board">
		select
		b.board_no,board_title,user_id,board_date,board_content,reply_content
		from board b join reply r
		on b.board_no=r.board_no
		where b.board_no=
		#{bno}
	</select>
	<select id="adminBoardInfon" resultType="board">
		select *
		from board
		where
		board_no = #{bno}
	</select>
	<select id="adminOrderList" resultType="order">
		select *
		from orders
		where
		order_status = 1 or order_status = 2 or order_status = 3 or
		order_status = 4
		order by
		order_status
	</select>
	<update id="adminOrderStatus" parameterType="int">
		update orders
		set
		order_status = order_status+1
		where order_no = #{bno}
	</update>
	<select id="adminCancleList" resultType="order">
		select *
		from orders
		where order_status = 5 or order_status = 6
		order by order_status
	</select>
	<update id="adminCancleAgree" parameterType="int">
		update orders
		set
		order_status = 6
		where order_no = #{ono}
	</update>
	<select id="adminReturnList" resultType="order">
		select *
		from orders
		where order_status = 7 or order_status = 8
		order by order_status
	</select>
	<update id="adminReturnAgree" parameterType="int">
		update orders
		set
		order_status = 8
		where order_no = #{rno}
	</update>
	<select id="topAdminCategoryList" resultType="category">
		select *
		from category
		 <![CDATA[
       where category_code < 10
  			]]>
	</select>
	<select id="adminCategoryList" resultType="category">
		select *
		from category
		where top_category = #{cno}
	</select>
	<insert id="adminAddProductControl" parameterType="product">
		insert into
		product(prod_no,category_code,prod_name,prod_comment,prod_price,prod_image,prod_comment_image)
		values(product_seq.nextval,#{categoryCode},#{prodName},#{prodComment},#{prodPrice},#{prodImage},#{prodCommentImage})
	</insert>
	<insert id="adminBoardReply" parameterType="com.shop.vo.ReplyVO">
		insert into
		reply(reply_no,board_no,reply_content)
		values(reply_seq.nextval,#{boardNo},#{replyContent})
	</insert>
	<update id="adminBoardReplyUp" parameterType="int">
		update board
		set
		board_status = 'y'
		where board_no = #{bno}
	</update>
	<update id="adminReplyModi" parameterType="com.shop.vo.ReplyVO">
		update reply
		set
		reply_content=#{replyContent}
		where board_no=#{boardNo}
	</update>
	<select id="adminUnprocessedOrder" parameterType="order">
		select *
		from
		orders
		where
		order_status = 1 or order_status = 2 or order_status = 3
		order by
		order_status
	</select>
	<select id="adminUnprocessedCancle" parameterType="order">
		select *
		from
		orders
		where order_status = 5
	</select>
	<select id="adminUnprocessedReturns" parameterType="order">
		select *
		from
		orders
		where order_status = 7
	</select>
	<select id="adminUnprocessedReply" parameterType="board">
		select *
		from
		board
		where
		board_status = 'n'
	</select>
	<select id="adminPopularProduct" resultType="int">
		select MAX( prod_no
		) KEEP ( DENSE_RANK FIRST ORDER BY prod_sale DESC )
		from product
	</select>
	<select id="adminleastProduct" resultType="int">
		select MIN( prod_no
		)
		KEEP ( DENSE_RANK LAST ORDER BY prod_sale DESC )
		from product
	</select>
	<select id="adminPopulaReview" resultType="int">
		SELECT prod_no
		FROM (
		SELECT prod_no, COUNT(*) AS cnt
		FROM review
		GROUP BY
		prod_no
		 <![CDATA[
		HAVING COUNT(*) >= 1
		]]>
		ORDER BY cnt DESC
		)
		WHERE ROWNUM = 1
	</select>
	<select id="adminhighStar" resultType="int">
		select max ( prod_no )
		KEEP ( DENSE_RANK LAST ORDER BY review_score DESC )
		from review
	</select>
	<select id="adminProductInfo" resultType="product">
		select
		p.prod_no,prod_name,prod_comment,prod_price,prod_sale,prod_date,category_name,prod_image,PROD_COMMENT_IMAGE
		from product p join category c
		on p.category_code = c.category_code
		where prod_no = #{prodNo}
		order by p.category_code
	</select>
	<update id="adminProductModify" parameterType="product">
		update product
		set
		prod_name = #{prodName},prod_price
		=#{prodPrice},prod_comment=#{prodComment},
		prod_image=#{prodImage},PROD_COMMENT_IMAGE = #{prodCommentImage}
		where
		prod_no=#{prodNo}
	</update>
	<delete id="adminProductRemove" parameterType="int">
		delete from
		product
		where prod_no = #{prodNo}
	</delete>
	<select id="adminReviewList" resultType="review">
		select *
		from review
		where prod_no = #{prodNo}
	</select>
	<select id="adminReviewStar" resultType="int">
		select
		nvl(round(avg(review_score),1),0)
		from review
		where prod_no = #{prodNo}
	</select>
	<select id="adminOrderInfo" resultType="order">
		select
		o.order_date,o.order_no,u.user_name,u.user_phone,o.order_post,
		o.order_addr,o.order_detail_addr,o.order_status,o.order_price
		from
		orders o join
		users u
		on o.user_id= u.user_id
		where o.user_id=#{uid} and
		order_no=
		#{ono}
	</select>
	<select id="adminOrderDetail" resultType="product">
		select
		p.prod_name,p.prod_price,p.prod_image,d.order_cnt,p.prod_no,(p.prod_price*d.order_cnt)
		as prod_total
		from
		product p join
		order_detail d
		on p.prod_no=d.prod_no
		where d.order_no =
		#{ono}
	</select>
	<select id="adminBarChart" resultType="chart">
		SELECT TRUNC(order_date)
		AS chart_date,
		ROUND(AVG(order_price), 0) AS
		chart_value
		FROM orders
		WHERE order_date > SYSDATE - INTERVAL '8' DAY
						 <![CDATA[
		AND TRUNC(order_date) <= TRUNC(SYSDATE) - 1 
							]]>
		GROUP BY TRUNC(order_date)
		ORDER BY TRUNC(order_date)
	</select>
	<select id="adminPieChart" resultType="chart">
		select c.TOP_CATEGORY as
		"chart_name" ,sum(order_price) as "chart_value"
		from orders o join
		order_detail d
		on o.order_no=d.order_no
		join product p
		on p.prod_no =
		d.prod_no
		join category c
		on c.category_code = p.category_code
		group by
		c.top_category
	</select>
	<select id="adminTimeChart" resultType="chart">
		WITH hours AS (
		SELECT LEVEL - 1 AS hour
		FROM DUAL
    <![CDATA[
    CONNECT BY LEVEL <= 24
		)
	]]>
		SELECT LPAD(h.hour, 2, '0') AS chart_name,
		CASE
		WHEN COUNT(DISTINCT
		TRUNC(o.order_date)) = 0 THEN 0
		ELSE
		ROUND(NVL(SUM(COALESCE(o.order_price, 0)), 0) / COUNT(DISTINCT
		TRUNC(o.order_date)), 0)
		END AS chart_value
		FROM hours h
		LEFT JOIN orders
		o ON TO_CHAR(o.order_date, 'HH24') = LPAD(h.hour, 2, '0')
		GROUP BY
		LPAD(h.hour, 2, '0')
		ORDER BY LPAD(h.hour, 2, '0')
	</select>
</mapper>